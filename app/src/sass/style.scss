@use "sass:map";

@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Raleway:wght@200;300;400;500&display=swap");

$menu-text: #686868;
$text: #9195a1;
$check: #404040;
$disabled: #404040;

@mixin flex-display($display, $align-items, $justify-content) {
	display: $display;
	align-items: $align-items;
	justify-content: $justify-content;
}

* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  height: 100vw;
  overflow: hidden;
}

h1,
h3,
li {
  font-family: "Lato", sans-serif;
}

:not(h1, h3, li) {
  font-family: "Raleway", sans-serif;
}

.title {
  background-color: #686769;
  top: 0;
  left: 0;
  z-index: 100;
  max-width: 100vw;
  user-select: none;
  .macos-titlebar {
    @include flex-display(flex, center, space-between);
    overflow: hidden;
    height: 35px;
    padding-left: 2vw;
    padding-right: 10px;
    -webkit-app-region: drag;
    .button-container {
      @include flex-display(flex, center, space-between);
      height: 35px;
      padding-left: 65px;
      padding-right: 10px;
      color: #fff;
      cursor: pointer;

      .normal-button {
        @include flex-display(flex, center, normal);
        padding: 3px;
        border-radius: 3px;
        cursor: pointer;

        &:hover {
          background-color: rgba(0, 0, 0, 0.1);
        }

        svg {
          width: 15px;
          height: 15px;
          fill: #fff;
          margin-right: 7px;
        }
        p {
          font-size: 0.8rem;
          margin: 0;
        }
      }
    }
  }
}

.menu {
  height: 100%;
  position: fixed;
  width: 250px;
  z-index: 1;
  top: 35px;
  left: 0;
  overflow: hidden;
  padding: 25px 10px;
  .Search {
    position: relative;
    width: 100%;

    input {
      outline: none;
      resize: vertical;
      line-height: 14px;
      font-size: 14px;
      box-sizing: border-box;
      padding: 10px 15px;
      width: 100%;
      border-radius: 5px;
      text-transform: capitalize;

      &:valid + .reset + .submit {
        display: none;
      }

      &:valid + .reset {
        display: block;
      }
    }

    input[type="search"]::-webkit-search-decoration,
    input[type="search"]::-webkit-search-cancel-button,
    input[type="search"]::-webkit-search-results-button,
    input[type="search"]::-webkit-search-results-decoration {
      -webkit-appearance: none;
    }

    .submit {
      cursor: pointer;
      text-transform: uppercase;
      border: 0;
      background-color: transparent;
      position: absolute;
      top: 10px;
      right: 10px;

      svg {
        width: 13px;
        opacity: 0.5;
      }
    }

    button[type="reset"] {
      cursor: pointer;
      padding: 0 10px;
      background: none;
      outline: none;
      border: none;
      display: none;
      position: absolute;
      right: 1px;
      top: 12px;

      svg {
        width: 13px;
        opacity: 0.5;
      }
    }
  }

  .my-lists {
    margin-top: 50px;
    position: relative;
    width: 100%;
    height: 90%;

    header {
      @include flex-display(flex, center, space-between);
      color: $menu-text;

      h3 {
        font-weight: 400;
      }

      .list-btn {
        background-color: transparent;
        border: 0;
        font-size: 1.5rem;
        margin-right: 5px;
        cursor: pointer;
        color: $menu-text;
      }
    }

    .list {
      position: absolute;
      height: 90%;
      width: 100%;
      ul {
        list-style: none;
        margin: 0;
        padding: 0;
        font-weight: 200;
        height: 55vw;
        overflow-y: auto;
        &::-webkit-scrollbar {
          width: 1.2vw;
        }

        li {
          padding: 10px 15px;
          margin: 5px 0;
          cursor: pointer;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
          @include flex-display(flex, center, normal);

          &:first-child {
            margin-top: 0;
          }
          &:last-child {
            margin-bottom: 0;
          }
          span {
            margin-right: 5px;
            padding: 2px 5px;
            border-radius: 50%;

            svg {
              fill: #fff;
              width: 13px;
              margin-top: 3px;
            }
          }

          &:hover {
            opacity: 0.85;
          }
        }
      }
    }
  }

  .language,
  .theme {
    @include flex-display(flex, center, normal);
    font-size: 1.3rem;
  }
}

.setting-menu {
  @include flex-display(flex, center, center);
  flex-direction: column;

  div {
    margin: 10px 0;

    svg {
      width: 20px;
      margin-right: 7px;
      cursor: pointer;
    }

    p {
      cursor: pointer;
    }
  }
}

main {
  margin-left: 242px;
  padding-left: 40px;
  height: 100%;

  header {
    @include flex-display(flex, center, space-between);

    .new-task-btn {
      background-color: transparent;
      border: 0;
      font-size: 2rem;
      margin-right: 20px;
      cursor: pointer;
    }

    h1 {
      font-weight: 400;
    }
  }

  .task-add {
    margin: 20px 0 0 5px;
    span {
      display: inline-block;
      height: 2px;
      width: 8px;
      border-radius: 2px;
      margin: 0 15px 3px 0;
    }
    .task-input {
      border: 0;
      outline: 0;
      padding: 5px;
      font-size: 1rem;
      width: 50%;
      background-color: transparent;
      position: relative;
    }
  }

  /*base code*/
  .animated {
    -webkit-animation-duration: 1s;
    animation-duration: 1s;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
  }

  /*the animation definition*/
  @-webkit-keyframes bounceIn {
    0%,
    100%,
    20%,
    40%,
    60%,
    80% {
      -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    0% {
      opacity: 0;
      -webkit-transform: scale3d(0.3, 0.3, 0.3);
      transform: scale3d(0.3, 0.3, 0.3);
    }
    20% {
      -webkit-transform: scale3d(1.1, 1.1, 1.1);
      transform: scale3d(1.1, 1.1, 1.1);
    }
    40% {
      -webkit-transform: scale3d(0.9, 0.9, 0.9);
      transform: scale3d(0.9, 0.9, 0.9);
    }
    60% {
      opacity: 1;
      -webkit-transform: scale3d(1.03, 1.03, 1.03);
      transform: scale3d(1.03, 1.03, 1.03);
    }
    80% {
      -webkit-transform: scale3d(0.97, 0.97, 0.97);
      transform: scale3d(0.97, 0.97, 0.97);
    }
    100% {
      opacity: 1;
      -webkit-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  }
  @keyframes bounceIn {
    0%,
    100%,
    20%,
    40%,
    60%,
    80% {
      -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    }
    0% {
      opacity: 0;
      -webkit-transform: scale3d(0.3, 0.3, 0.3);
      -ms-transform: scale3d(0.3, 0.3, 0.3);
      transform: scale3d(0.3, 0.3, 0.3);
    }
    20% {
      -webkit-transform: scale3d(1.1, 1.1, 1.1);
      -ms-transform: scale3d(1.1, 1.1, 1.1);
      transform: scale3d(1.1, 1.1, 1.1);
    }
    40% {
      -webkit-transform: scale3d(0.9, 0.9, 0.9);
      -ms-transform: scale3d(0.9, 0.9, 0.9);
      transform: scale3d(0.9, 0.9, 0.9);
    }
    60% {
      opacity: 1;
      -webkit-transform: scale3d(1.03, 1.03, 1.03);
      -ms-transform: scale3d(1.03, 1.03, 1.03);
      transform: scale3d(1.03, 1.03, 1.03);
    }
    80% {
      -webkit-transform: scale3d(0.97, 0.97, 0.97);
      -ms-transform: scale3d(0.97, 0.97, 0.97);
      transform: scale3d(0.97, 0.97, 0.97);
    }
    100% {
      opacity: 1;
      -webkit-transform: scale3d(1, 1, 1);
      -ms-transform: scale3d(1, 1, 1);
      transform: scale3d(1, 1, 1);
    }
  }
  /*the animation definition*/
  @-webkit-keyframes bounceOut {
    20% {
      -webkit-transform: scale3d(0.9, 0.9, 0.9);
      transform: scale3d(0.9, 0.9, 0.9);
    }
    50%,
    55% {
      opacity: 1;
      -webkit-transform: scale3d(1.1, 1.1, 1.1);
      transform: scale3d(1.1, 1.1, 1.1);
    }
    100% {
      opacity: 0;
      -webkit-transform: scale3d(0.3, 0.3, 0.3);
      transform: scale3d(0.3, 0.3, 0.3);
    }
  }
  @keyframes bounceOut {
    20% {
      -webkit-transform: scale3d(0.9, 0.9, 0.9);
      -ms-transform: scale3d(0.9, 0.9, 0.9);
      transform: scale3d(0.9, 0.9, 0.9);
    }
    50%,
    55% {
      opacity: 1;
      -webkit-transform: scale3d(1.1, 1.1, 1.1);
      -ms-transform: scale3d(1.1, 1.1, 1.1);
      transform: scale3d(1.1, 1.1, 1.1);
    }
    100% {
      opacity: 0;
      -webkit-transform: scale3d(0.3, 0.3, 0.3);
      -ms-transform: scale3d(0.3, 0.3, 0.3);
      transform: scale3d(0.3, 0.3, 0.3);
    }
  }
  /*the animation definition*/
  @-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1)
  }
  50% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05)
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1)
  }}
  @keyframes pulse {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1)
  }
  50% {
    -webkit-transform: scale3d(1.05, 1.05, 1.05);
    -ms-transform: scale3d(1.05, 1.05, 1.05);
    transform: scale3d(1.05, 1.05, 1.05)
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    -ms-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1)
  }
}
  .pulse {
  -webkit-animation-name: pulse;
  animation-name: pulse
}

  .bounceOut {
    -webkit-animation-name: bounceOut;
    animation-name: bounceOut;
  }

  .bounceIn {
    -webkit-animation-name: bounceIn;
    animation-name: bounceIn;
  }

  .container {
    #todolist {
      position: relative;
      display: grid;
      grid-template-columns: 30px auto;
      align-items: center;
      margin-top: 30px;

      label {
        padding: 10px;
        color: $text;
        position: relative;
        cursor: pointer;
        display: grid;
        align-items: center;
        width: fit-content;
        transition: color 0.3s ease;
        &::before,
        &::after {
          content: "";
          position: absolute;
        }
        &::before {
          height: 2px;
          width: 8px;
          left: -27px;
          border-radius: 2px;
          background-color: $text;
          transition: background 0.3s ease;
        }
        &:after {
          height: 4px;
          width: 4px;
          top: 8px;
          left: -25px;
          border-radius: 50%;
        }
      }

      input[type="checkbox"] {
        -webkit-appearance: none;
        -moz-appearance: none;
        position: relative;
        height: 15px;
        width: 15px;
        outline: none;
        border: 0;
        margin: 0 15px 0 0;
        cursor: pointer;
        display: grid;
        align-items: center;
        
        &::before,
        &::after {
          content: "";
          position: absolute;
          height: 2px;
          top: auto;
          background: $check;
          border-radius: 2px;
        }
        &::before {
          width: 0;
          right: 60%;
          transform-origin: right bottom;
        }
        &::after {
          width: 0;
          left: 40%;
          transform-origin: left bottom;
        }
        &:checked {
          &::before {
            animation: check-01 0.4s ease forwards;
          }
          &::after {
            animation: check-02 0.4s ease forwards;
          }
          + label {
            color: $disabled;
            animation: move 0.3s ease 0.1s forwards;
            &::before {
              background: $disabled;
              animation: slice 0.4s ease forwards;
            }
            &::after {
              animation: firework 0.5s ease forwards 0.1s;
            }
          }
        }
      }
    }

    @keyframes move {
      50% {
        padding-left: 8px;
        padding-right: 0;
      }
      100% {
        padding-right: 4px;
      }
    }
    @keyframes slice {
      60% {
        width: 100%;
        left: 4px;
      }
      100% {
        width: 100%;
        left: -2px;
        padding-left: 0;
      }
    }
    @keyframes check-01 {
      0% {
        width: 4px;
        top: auto;
        transform: rotate(0);
      }
      50% {
        width: 0;
        top: auto;
        transform: rotate(0);
      }
      51% {
        width: 0;
        top: 8px;
        transform: rotate(45deg);
      }
      100% {
        width: 5px;
        top: 8px;
        transform: rotate(45deg);
      }
    }
    @keyframes check-02 {
      0% {
        width: 4px;
        top: auto;
        transform: rotate(0);
      }
      50% {
        width: 0;
        top: auto;
        transform: rotate(0);
      }
      51% {
        width: 0;
        top: 8px;
        transform: rotate(-45deg);
      }
      100% {
        width: 10px;
        top: 8px;
        transform: rotate(-45deg);
      }
    }
    @keyframes firework {
      0% {
        opacity: 1;
        box-shadow: 0 0 0 -2px $check, 0 0 0 -2px $check, 0 0 0 -2px $check,
          0 0 0 -2px $check, 0 0 0 -2px $check, 0 0 0 -2px $check;
      }
      30% {
        opacity: 1;
      }
      100% {
        opacity: 0;
        box-shadow: 0 -15px 0 0px $check, 14px -8px 0 0px $check,
          14px 8px 0 0px $check, 0 15px 0 0px $check, -14px 8px 0 0px $check,
          -14px -8px 0 0px $check;
      }
    }
  }
}

.setting-main {
  #container {
    height: 125%;
    @include flex-display(flex, center, center);
    flex-direction: column;
    overflow: hidden;
    .content {
      font-size: 1.2rem;
      height: 60vh;
      @include flex-display(flex, center, center);
    }
  }
}

@mixin createPrefersColorScheme($ui-colors, $colors){
  .menu {
    background-color: map.get($ui-colors, "menu-bg");
    input {
      background-color: map.get($ui-colors, "input-bg");
      color: map.get($ui-colors, "menu-text");
      border: 1px solid map.get($ui-colors, "border-color");
      &:focus {
        box-shadow: 0 0 0 1px map.get($ui-colors, "shadow-color");
      }
    }
    .Search {
      .submit {
        svg {
          fill: map.get($ui-colors, "icon");
        }
      }
      button[type="reset"] {
        svg {
          fill: map.get($ui-colors, "icon");
        }
      }
    }

    .my-lists {
      ul {
        li {
          color: map.get($ui-colors, "menu-text");
          @each $color-name, $color in $colors{
            .color-#{$color-name} {
              background-color: $color;
            }
          }

        }

        @each $color-name, $color in $colors{
          .color-#{$color-name} {
            background-color: rgba($color, 0.4);
          }
        }

        &::-webkit-scrollbar-track {
          background-color: rgba(#000000, 0.1);
        }

        &::-webkit-scrollbar-thumb {
          background-color: rgb(17, 16, 16);
          border-radius: 1rem;
          &:hover {
            background-color: rgba(rgb(13, 12, 12), 0.4);
          }
        }
      }
    }
  }

  .setting-menu {
    color: map.get($ui-colors, "menu-text");
    div {
      svg {
        fill: map.get($ui-colors, "icon");
      }
    }
  }

  main {
    background-color: map.get($ui-colors, "main-bg");
    color: map.get($ui-colors, "icon");

    header {
      button {
        color: map.get($ui-colors, "icon");
      }
    }

    .task-add {
      span {
        background-color: map.get($ui-colors, "check");
      }
      input {
        color: map.get($ui-colors, "icon");
      }
    }
  }

  .container {
    #checklist {
      label {
        color: map.get($ui-colors, "text");
        &::before {
          background: map.get($ui-colors, "check");
        }
      }
    }
  }

  .settings {
    color: map.get($ui-colors, "menu-text");
    svg {
      fill: map.get($ui-colors, "icon");
    }
  }
}

@media (prefers-color-scheme: dark) {
  $ui-colors: (
          "menu-bg" : #191919,
          "main-bg": #202020,
          "input-bg": #333333,
          "border-color": #3d3d3d,
          "shadow-color": rgba(224, 224, 224, 0.295),
          "menu-text": #e7e7e7,
          "circle-color": #d1d7dc,
          "icon": #fff,
          "text": #eeeeee,
          "check": #e7e7e7,
          "disabled": #a8a8a8
  );

  $colors: "red" #e25757, "blue" #5fa4ff, "green" #2fc43e, "purple" #a766d3, "orange" #fc9b2d, "pink" #ff5df1;

  @include createPrefersColorScheme($ui-colors, $colors);
}

@media (prefers-color-scheme: light) {
  $ui-colors: (
          "menu-bg" : #fafafa,
          "main-bg": #fdfdfd,
          "input-bg": #fff,
          "border-color": #ebebeb,
          "shadow-color": rgba(0, 0, 0, 0.03),
          "menu-text": #686868,
          "circle-color": #d1d7dc,
          "icon": #000,
          "text": #9195a1,
          "check": #404040,
          "disabled": #404040
  );

  $colors: "purple" #a872ff, "red" #ff9797, "blue" #75b1ff, "green" #49d657, "orange" #ffaf53, "pink" #f781ed;

  @include createPrefersColorScheme($ui-colors, $colors);
}